{"version":3,"sources":["components/Question.js","components/Answers.js","components/QuestName.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Question","questions","className","Answers","options","checkAnswer","correctAnswer","clickedAnswer","step","Object","keys","map","option","onClick","QuestName","handleChange","gotName","id","type","onChange","placeholder","Quiz","state","1","2","3","4","5","correctAnswers","score","gestName","answer","setState","e","target","value","nextStep","this","length","class","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.657637b8.chunk.js","sourcesContent":["import React from 'react'\nimport './styles/Question.css'\n\nconst Question = ({questions}) => {\n    return (\n        <div className='question'>\n            <p className=\"flow-text\">{questions}</p>\n        </div>\n    )\n}\n\nexport default Question","import React from 'react'\nimport './styles/Answers.css'\n\nconst Answers = ({ options, checkAnswer, correctAnswer, clickedAnswer, step }) => {\n\n    return (\n        <div>\n            <div className={ clickedAnswer ? 'disable' : ''}>\n                <ul className=\"collection\"> \n                    {Object.keys(options).map(option => \n                    <li \n                        className={\n                            correctAnswer === option ? 'collection-item green lighten-2' : \n                            clickedAnswer === option ? 'collection-item red lighten-2' : 'collection-item'\n                        }\n                        onClick={() => checkAnswer(option)}\n                        key={option}>\n                        {options[option]}\n                    </li>\n                    )} \n                </ul>\n                <div>\n                    { correctAnswer \n                    ?  \n                    <p className='green-text lighten-2'>Correct</p> \n                    : \n                    clickedAnswer \n                    ? \n                    <p className='red-text lighten-2'>Incorrect</p> \n                    : ''\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Answers\n","import React from 'react'\nimport './styles/QuestName.css'\n\nconst QuestName = ({handleChange, gotName}) => {\n    return( \n            <div className=\"questname\">\n                <div className=\"input-field col s6 \">\n                    <input \n                    id=\"first_name2\" \n                    type=\"text\" \n                    className=\"validate\"\n                    onChange={handleChange}\n                    placeholder='What is your name, darling?'\n                    >\n                    </input>\n                    <a className=\"waves-effect waves-light btn grey darken-3\" onClick={gotName}>say</a>\n                </div>\n            </div>\n    )\n}\n\nexport default QuestName ","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react'\nimport Question from './Question'\nimport Answers from './Answers'\nimport QuestName from './QuestName'\nimport './styles/Quiz.css'\n\nclass Quiz extends Component {\n\n    state = {\n        questions : {\n            1: 'With over 222 million units sold, what is Appleâ€™s highest-selling iPhone model?',\n            2: 'In which year was the Microsoft XP operating system released?',\n            3: 'What does LG stand for in LG Electronics?',\n            4: 'Originally Amazon only sold which product?',\n            5: 'Which prestigious university did Microsoft founder Bill Gates drop out of?'\n        },\n        options : {\n            1: {\n                1: 'iPhone 7/7 Plus',\n                2: 'iPhone 6/6 Plus',\n                3: 'iPhone 11 Pro / 11 Pro Max',\n            },\n            2: {\n                1: '2001',\n                2: '1997',\n                3: '2004',\n            },\n            3: {\n                1: 'Little Girl',\n                2: 'Life is Good',\n                3: 'Lucky-Goldstar',\n            },\n            4: {\n                1: 'Books',\n                2: 'Snacks',\n                3: 'Electronics',\n            },\n            5: {\n                1: 'Stanford',\n                2: 'Harvard',\n                3: 'Oxford'\n            }\n        },\n        correctAnswers: {\n            1: '2',\n            2: '1',\n            3: '3',\n            4: '1',\n            5: '2'\n        },\n        correctAnswer: 0,\n        clickedAnswer: 0,\n        step: 1,\n        score: 0,\n        gestName: null,\n        gotName: false\n    };\n\n    checkAnswer = (answer) => {\n        let { correctAnswers, score, correctAnswer, step, clickedAnswer } = this.state\n\n        if (correctAnswers[step] === answer) {\n            this.setState({\n                score: score + 1, \n                correctAnswer: correctAnswers[step],\n                clickedAnswer: answer\n            })\n        } else {\n            this.setState({\n                correctAnswer: 0,\n                clickedAnswer: answer\n            })\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({gestName: e.target.value});\n    }\n\n    gotName = () => {\n        if (this.state.gestName) {\n            this.setState({gotName: true})\n        }\n    }\n\n    nextStep = (step) => {\n        this.setState({\n            step: step + 1,\n            correctAnswer: 0,\n            clickedAnswer: 0\n        })\n    }\n\n    render() {\n        let { questions, step, options, correctAnswer, clickedAnswer, gotName, score, gestName } = this.state;\n        return(\n            <div className='quiz'> \n                { gotName \n                    ?\n                   (<div> \n                       { step <= Object.keys(questions).length ? \n                       (<div>\n                            < Question \n                            questions={questions[step]} \n                            />\n                            <Answers \n                            checkAnswer={this.checkAnswer} \n                            options={options[step]} \n                            correctAnswer={correctAnswer}\n                            clickedAnswer={clickedAnswer}\n                            />\n                            <a\n                            className={clickedAnswer ? 'waves-effect waves-light btn grey darken-3' : 'hidden'}\n                            onClick={() => this.nextStep(step)}\n                            >Next question\n                            </a>\n                       </div>\n                       ) : (\n                       <div>\n                            <h1>{gestName}, you have completed the quiz!</h1>\n                            <p class=\"flow-text\">Your score is: <b>{score}</b> of {Object.keys(questions).length}</p>\n                            <p>Thank you!</p>\n                       </div>)}\n                  \n                   </div>)\n                :\n                    (< QuestName \n                    handleChange={this.handleChange}\n                    gotName={this.gotName}/>)\n             \n                }\n            </div>\n        )\n    }\n}\n\nexport default Quiz","import './App.css';\nimport Quiz from './components/Quiz'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      < Quiz />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}