[{"/Users/nastya/Desktop/quiz-react-app/src/index.js":"1","/Users/nastya/Desktop/quiz-react-app/src/reportWebVitals.js":"2","/Users/nastya/Desktop/quiz-react-app/src/App.js":"3","/Users/nastya/Desktop/quiz-react-app/src/components/Quiz.js":"4","/Users/nastya/Desktop/quiz-react-app/src/components/Question.js":"5","/Users/nastya/Desktop/quiz-react-app/src/components/Answers.js":"6","/Users/nastya/Desktop/quiz-react-app/src/components/QuestName.js":"7"},{"size":500,"mtime":1610977660654,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611159910510,"results":"10","hashOfConfig":"9"},{"size":167,"mtime":1610978303835,"results":"11","hashOfConfig":"9"},{"size":4198,"mtime":1611159621515,"results":"12","hashOfConfig":"9"},{"size":242,"mtime":1611224602476,"results":"13","hashOfConfig":"9"},{"size":1269,"mtime":1611224572705,"results":"14","hashOfConfig":"9"},{"size":692,"mtime":1611224623409,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7fkhix",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nastya/Desktop/quiz-react-app/src/index.js",[],["32","33"],"/Users/nastya/Desktop/quiz-react-app/src/reportWebVitals.js",[],"/Users/nastya/Desktop/quiz-react-app/src/App.js",[],"/Users/nastya/Desktop/quiz-react-app/src/components/Quiz.js",["34","35"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react'\nimport Question from './Question'\nimport Answers from './Answers'\nimport QuestName from './QuestName'\nimport './styles/Quiz.css'\n\nclass Quiz extends Component {\n\n    state = {\n        questions : {\n            1: 'With over 222 million units sold, what is Appleâ€™s highest-selling iPhone model?',\n            2: 'In which year was the Microsoft XP operating system released?',\n            3: 'What does LG stand for in LG Electronics?',\n            4: 'Originally Amazon only sold which product?',\n            5: 'Which prestigious university did Microsoft founder Bill Gates drop out of?'\n        },\n        options : {\n            1: {\n                1: 'iPhone 7/7 Plus',\n                2: 'iPhone 6/6 Plus',\n                3: 'iPhone 11 Pro / 11 Pro Max',\n            },\n            2: {\n                1: '2001',\n                2: '1997',\n                3: '2004',\n            },\n            3: {\n                1: 'Little Girl',\n                2: 'Life is Good',\n                3: 'Lucky-Goldstar',\n            },\n            4: {\n                1: 'Books',\n                2: 'Snacks',\n                3: 'Electronics',\n            },\n            5: {\n                1: 'Stanford',\n                2: 'Harvard',\n                3: 'Oxford'\n            }\n        },\n        correctAnswers: {\n            1: '2',\n            2: '1',\n            3: '3',\n            4: '1',\n            5: '2'\n        },\n        correctAnswer: 0,\n        clickedAnswer: 0,\n        step: 1,\n        score: 0,\n        gestName: null,\n        gotName: false\n    };\n\n    checkAnswer = (answer) => {\n        let { correctAnswers, score, correctAnswer, step, clickedAnswer } = this.state\n\n        if (correctAnswers[step] === answer) {\n            this.setState({\n                score: score + 1, \n                correctAnswer: correctAnswers[step],\n                clickedAnswer: answer\n            })\n        } else {\n            this.setState({\n                correctAnswer: 0,\n                clickedAnswer: answer\n            })\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({gestName: e.target.value});\n    }\n\n    gotName = () => {\n        if (this.state.gestName) {\n            this.setState({gotName: true})\n        }\n    }\n\n    nextStep = (step) => {\n        this.setState({\n            step: step + 1,\n            correctAnswer: 0,\n            clickedAnswer: 0\n        })\n    }\n\n    render() {\n        let { questions, step, options, correctAnswer, clickedAnswer, gotName, score, gestName } = this.state;\n        return(\n            <div className='quiz'> \n                { gotName \n                    ?\n                   (<div> \n                       { step <= Object.keys(questions).length ? \n                       (<div>\n                            < Question \n                            questions={questions[step]} \n                            />\n                            <Answers \n                            checkAnswer={this.checkAnswer} \n                            options={options[step]} \n                            correctAnswer={correctAnswer}\n                            clickedAnswer={clickedAnswer}\n                            />\n                            <a\n                            className={clickedAnswer ? 'waves-effect waves-light btn grey darken-3' : 'hidden'}\n                            onClick={() => this.nextStep(step)}\n                            >Next question\n                            </a>\n                       </div>\n                       ) : (\n                       <div>\n                            <h1>{gestName}, you have completed the quiz!</h1>\n                            <p class=\"flow-text\">Your score is: <b>{score}</b> of {Object.keys(questions).length}</p>\n                            <p>Thank you!</p>\n                       </div>)}\n                  \n                   </div>)\n                :\n                    (< QuestName \n                    handleChange={this.handleChange}\n                    gotName={this.gotName}/>)\n             \n                }\n            </div>\n        )\n    }\n}\n\nexport default Quiz","/Users/nastya/Desktop/quiz-react-app/src/components/Question.js",[],"/Users/nastya/Desktop/quiz-react-app/src/components/Answers.js",[],"/Users/nastya/Desktop/quiz-react-app/src/components/QuestName.js",["36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":61,"column":38,"nodeType":"43","messageId":"44","endLine":61,"endColumn":51},{"ruleId":"41","severity":1,"message":"45","line":61,"column":59,"nodeType":"43","messageId":"44","endLine":61,"endColumn":72},{"ruleId":"46","severity":1,"message":"47","line":16,"column":21,"nodeType":"48","endLine":16,"endColumn":97},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'correctAnswer' is assigned a value but never used.","Identifier","unusedVar","'clickedAnswer' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]